################################
## DONE TODAY ##################
################################

2013-07-16
- finished canvas context menu to create new nodes
- node-creation now fully completed (persistent, saves etc.)
- trigger set_modified when disconnecting, creating nodes
- nodes can now be focused on (click), with visual feedback (border)

2013-07-15
- isolated connect_start actions for nodes (associating arrows) onto node's connection pad (BSNodeConnPad)
- canvas/nodes: isolated all actions to left-clicks only
- implemented right-click action on canvas that opens context menu listing sets of sources and filters not currently used in current set

2013-07-10
- debugged arrow signals and reference management that lead to reference-radicals that were still active (and called other local references) even though they should have been deleted but hadn't, as they were not added to the central list managing the arrows.

2013-05-25 - 27
- implemented save-methodology for nodes
	- set-table on db has a column "gui_data" that saves a dictionary with a namespace for the nodes, ids, etc. and their x/y (center) coordinates. That's all for now, will be able to add data later on easily.
	- added save button
	- added timeout signals that exectue the save_to_db after a 1s timeout if the modified_signal has been triggered. During that time the save button gets enabled making it possible to click it manually (If you're really in a hurry)

2013-05-24
- Started implementing new concepts sketched out yesterday:
	- db-changes: sets columns "source_ass", "filter_ass" contain dictionaries that link source-ids and filter-ids (respectively) to other nodes (through their ids). If they link to `-1` it means they directly connect to the set's set of targets. Each node can only link to one other node but accept multiple incoming connections. Filters can be chained up (but not in loops, this is an implementation detail in the control code later). A source can directly link to the set of targets.
	- BackupSourceCtrl: implemented logics in ctrl and gui code. Ctrl code carries all associations as object links. Gui code now sets up fully, spawning and connecting nodes (visually).
	- [done] BackupFilterCtrl: implementing same logics in ctrl and gui as for BackupSourceCtrl.
	- [done] implementing target sets visually:
		- write gui classes
		- spawn node(s)
		- get sources/filters to connect arrows up to targets set

2013-05-23
- restarted gui/ctrl implementation for sets with new concept
	- all node-based now after all.
	- sources are single nodes
	- filters are (multiple) sets of nodes of different sub-types ("starts with", "contains", "matches", "regex", etc.)
	- targets are always in a (semi-)fixed set. I'll reserve the option to implement functionality of mirroring data to an additional target and/or to remove a target permanently. All targets will still all be grouped into one logical unit (to visualize semi-static behaviour and since it'd probably less common to "frequently" alter the set of targets).
- superclassed BSNode, BSNodeItem to derive menu as well as all nodes (sources, filters, targets...) from it

2013-05-21
- [in progress] previous Q/A: document code
- ViewSetsDetailsSources/Filters/Targets superclassed into ViewSetsDetailsContainer
- ViewSetsDetailsArrow superclassed into same class name (and subclassed separate arrows)
- ViewSets:
	- arrows have arrowheads now
	- added targets
	- added arrows between filters and targets
	- added uniform, default width for sources, filters, targets and expansion to relaxed width on hover

2013-05-20
- [done] clean-up old, obsolete code (commented out etc.)
- [done] refactor (session) controllers to follow a paradigm where "add" and "remove" perform associative changes, while "create" and "delete" do integral changes (to model/database)
- [done] ability to remove a source
	- session: Added BackupSetCtrl.remove_backup_source()
- implemented scroll area into view_sets_details
- set-up the whole view_sets dynamic custom layout management
- implemented a view_set_details_arrows arrow set (sources to filters for now)

2013-05-19
- isinstance(): converted all comparison class-paths to absolute paths (bs.session.~ vs. ~)
- restructured source-files: created bs.ctrl, ~.model and sorted files accordingly
- [done] fixed/expanded keyboard/mouse controls on ViewSetsSetsList
- ViewSetsSetsList gains focus on set_view
